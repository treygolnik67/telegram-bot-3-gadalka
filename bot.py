# bot.py ‚Äî –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç

import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

API_TOKEN = '8224578219:AAHxTrnO4nc28QXgmEsEAqniwYi5MeTwwos'

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

gadalka = [
    "–¢–µ–±–µ –ø–æ–≤–µ–∑—ë—Ç —Å–µ–≥–æ–¥–Ω—è!",
    "–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —É–¥–∞—á–∏!",
    "–ü–ª–∞–Ω–∏—Ä—É–π –≤—Å—Ç—Ä–µ—á—É —Å –∫–æ–ª–ª–µ–≥–æ–π.",
    "–ó–∞–ø–∏—à–∏ –∏–¥–µ—é ‚Äî –æ–Ω–∞ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤–µ–ª–∏–∫–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º.",
    "–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —É–ª–∏—Ü—É.",
    "–£ —Ç–µ–±—è –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!",
    "–°–µ–≥–æ–¥–Ω—è —Ç—ã —Å–¥–µ–ª–∞–µ—à—å –≤–∞–∂–Ω—ã–π —à–∞–≥ –≤–ø–µ—Ä—ë–¥.",
    "–ë—É–¥—å –≥–æ—Ç–æ–≤ –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º—É –ø–æ–¥–∞—Ä–∫—É.",
    "–¢–≤–æ–π –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω –ø–æ–∑–∏—Ç–∏–≤–∞!",
    "–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–∞ —É–ª—ã–±–Ω—ë—Ç—Å—è —Ç–µ–±–µ.",
    "–í—Å–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è –ø—Ä–æ–π–¥—É—Ç —É—Å–ø–µ—à–Ω–æ.",
    "–¢—ã –Ω–∞–π–¥—ë—à—å —Ä–µ—à–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏.",
    "–¢–≤–æ–∏ –º–µ—á—Ç—ã —Å–∫–æ—Ä–æ —Å–±—É–¥—É—Ç—Å—è.",
    "–°–µ–≥–æ–¥–Ω—è —Ç—ã —Å–¥–µ–ª–∞–µ—à—å —á—Ç–æ-—Ç–æ –∑–Ω–∞—á–∏–º–æ–µ.",
    "–£ —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è ‚Äî –≤–µ—Ä—å –≤ —Å–µ–±—è!"
]

# üì¢ –†–µ–∞–ª—å–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ (AdFox)
ads = [
    "<iframe src='https://adfox.ru/758968/1041184/iframe' width='300' height='250' frameborder='0'></iframe>",
    "<iframe src='https://adfox.ru/758968/1041185/iframe' width='300' height='250' frameborder='0'></iframe>",
    "<iframe src='https://adfox.ru/758968/1041186/iframe' width='300' height='250' frameborder='0'></iframe>",
    "<iframe src='https://adfox.ru/758968/1041187/iframe' width='300' height='250' frameborder='0'></iframe>"
]

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    ad = random.choice(ads)
    await message.answer(f"üîÆ –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç-–≥–∞–¥–∞–ª–∫–∞.\n\n"
                         f"{ad}\n\n"
                         f"–ù–∞–ø–∏—à–∏ /predict ‚Äî —è —Å–∫–∞–∂—É, —á—Ç–æ –±—É–¥–µ—Ç!")

@dp.message(Command("predict"))
async def predict(message: types.Message):
    phrase = random.choice(gadalka)
    ad = random.choice(ads)
    await message.answer(f"üîÆ {phrase}\n\n"
                         f"{ad}")

@dp.message()
async def handle_message(message: types.Message):
    text = message.text.lower()
    if "–≥–∞–¥–∞–ª–∫–∞" in text or "–ø—Ä–æ–≥–Ω–æ–∑" in text:
        await message.answer("–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /predict ‚Äî —è —Ä–∞—Å—Å–∫–∞–∂—É, —á—Ç–æ –±—É–¥–µ—Ç!")
    elif "–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å" in text or "–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å" in text:
        await message.answer("üí° –•–æ—á–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å? –°–æ–∑–¥–∞–π —Å–≤–æ–π –±–æ—Ç ‚Äî —ç—Ç–æ –ª–µ–≥–∫–æ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n"
                             "–ü—Ä–∏—Ö–æ–¥–∏ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª: @manga_gadalka ‚Äî —Ç–∞–º –≤—Å—ë –æ–±—ä—è—Å–Ω—è—é!")

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    from aiogram.webhook import WebhookServer
    import asyncio
    server = WebhookServer(host="0.0.0.0", port=int(os.environ.get("PORT", 80)))
    asyncio.run(server.run(
        handle_update=lambda request: dp.process_update(types.Update(**request.json())),
        on_startup=lambda: print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"),
        on_shutdown=lambda: print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    ))

